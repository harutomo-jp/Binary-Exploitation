
hello_world:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 20                	add    BYTE PTR [eax],ah
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	14 00                	adc    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	03 00                	add    eax,DWORD PTR [eax]
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 d9                	add    cl,bl
 8048179:	60                   	pusha
 804817a:	fa                   	cli
 804817b:	c5 81 b3 aa 8f c0    	lds    eax,FWORD PTR [ecx-0x3f70554d]
 8048181:	52                   	push   edx
 8048182:	d6                   	(bad)
 8048183:	69 5d c2 84 d3 4a fb 	imul   ebx,DWORD PTR [ebp-0x3e],0xfb4ad384
 804818a:	16                   	push   ss
 804818b:	bf                   	.byte 0xbf

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	02 00                	add    al,BYTE PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	04 00                	add    al,0x0
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	01 00                	add    DWORD PTR [eax],eax
 8048196:	00 00                	add    BYTE PTR [eax],al
 8048198:	05 00 00 00 00       	add    eax,0x0
 804819d:	20 00                	and    BYTE PTR [eax],al
 804819f:	20 00                	and    BYTE PTR [eax],al
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 80481a6:	00 00                	add    BYTE PTR [eax],al
 80481a8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481a9:	4b                   	dec    ebx
 80481aa:	e3 c0                	jecxz  804816c <_init-0x124>

Disassembly of section .dynsym:

080481ac <.dynsym>:
	...
 80481bc:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 80481c6:	00 00                	add    BYTE PTR [eax],al
 80481c8:	12 00                	adc    al,BYTE PTR [eax]
 80481ca:	00 00                	add    BYTE PTR [eax],al
 80481cc:	31 00                	xor    DWORD PTR [eax],eax
	...
 80481d6:	00 00                	add    BYTE PTR [eax],al
 80481d8:	20 00                	and    BYTE PTR [eax],al
 80481da:	00 00                	add    BYTE PTR [eax],al
 80481dc:	1f                   	pop    ds
	...
 80481e5:	00 00                	add    BYTE PTR [eax],al
 80481e7:	00 12                	add    BYTE PTR [edx],dl
 80481e9:	00 00                	add    BYTE PTR [eax],al
 80481eb:	00 0b                	add    BYTE PTR [ebx],cl
 80481ed:	00 00                	add    BYTE PTR [eax],al
 80481ef:	00 ac 84 04 08 04 00 	add    BYTE PTR [esp+eax*4+0x40804],ch
 80481f6:	00 00                	add    BYTE PTR [eax],al
 80481f8:	11 00                	adc    DWORD PTR [eax],eax
 80481fa:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

080481fc <.dynstr>:
 80481fc:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048200:	63 2e                	arpl   WORD PTR [esi],ebp
 8048202:	73 6f                	jae    8048273 <_init-0x1d>
 8048204:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 8048209:	4f                   	dec    edi
 804820a:	5f                   	pop    edi
 804820b:	73 74                	jae    8048281 <_init-0xf>
 804820d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048214:	64 
 8048215:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 8048218:	74 73                	je     804828d <_init-0x3>
 804821a:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804821d:	6c                   	ins    BYTE PTR es:[edi],dx
 804821e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 8048225:	72 74                	jb     804829b <_init+0xb>
 8048227:	5f                   	pop    edi
 8048228:	6d                   	ins    DWORD PTR es:[edi],dx
 8048229:	61                   	popa
 804822a:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 8048231:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048232:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048233:	5f                   	pop    edi
 8048234:	73 74                	jae    80482aa <_init+0x1a>
 8048236:	61                   	popa
 8048237:	72 74                	jb     80482ad <_init+0x1d>
 8048239:	5f                   	pop    edi
 804823a:	5f                   	pop    edi
 804823b:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 804823e:	49                   	dec    ecx
 804823f:	42                   	inc    edx
 8048240:	43                   	inc    ebx
 8048241:	5f                   	pop    edi
 8048242:	32 2e                	xor    ch,BYTE PTR [esi]
 8048244:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

08048246 <.gnu.version>:
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	02 00                	add    al,BYTE PTR [eax]
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	02 00                	add    al,BYTE PTR [eax]
 804824e:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

08048250 <.gnu.version_r>:
 8048250:	01 00                	add    DWORD PTR [eax],eax
 8048252:	01 00                	add    DWORD PTR [eax],eax
 8048254:	01 00                	add    DWORD PTR [eax],eax
 8048256:	00 00                	add    BYTE PTR [eax],al
 8048258:	10 00                	adc    BYTE PTR [eax],al
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	00 00                	add    BYTE PTR [eax],al
 804825e:	00 00                	add    BYTE PTR [eax],al
 8048260:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 8048263:	0d 00 00 02 00       	or     eax,0x20000
 8048268:	40                   	inc    eax
 8048269:	00 00                	add    BYTE PTR [eax],al
 804826b:	00 00                	add    BYTE PTR [eax],al
 804826d:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048270 <.rel.dyn>:
 8048270:	ac                   	lods   al,BYTE PTR ds:[esi]
 8048271:	96                   	xchg   esi,eax
 8048272:	04 08                	add    al,0x8
 8048274:	06                   	push   es
 8048275:	02 00                	add    al,BYTE PTR [eax]
	...

Disassembly of section .rel.plt:

08048278 <.rel.plt>:
 8048278:	bc 96 04 08 07       	mov    esp,0x7080496
 804827d:	01 00                	add    DWORD PTR [eax],eax
 804827f:	00 c0                	add    al,al
 8048281:	96                   	xchg   esi,eax
 8048282:	04 08                	add    al,0x8
 8048284:	07                   	pop    es
 8048285:	02 00                	add    al,BYTE PTR [eax]
 8048287:	00 c4                	add    ah,al
 8048289:	96                   	xchg   esi,eax
 804828a:	04 08                	add    al,0x8
 804828c:	07                   	pop    es
 804828d:	03 00                	add    eax,DWORD PTR [eax]
	...

Disassembly of section .init:

08048290 <_init>:
 8048290:	53                   	push   ebx
 8048291:	83 ec 08             	sub    esp,0x8
 8048294:	e8 97 00 00 00       	call   8048330 <__x86.get_pc_thunk.bx>
 8048299:	81 c3 17 14 00 00    	add    ebx,0x1417
 804829f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80482a5:	85 c0                	test   eax,eax
 80482a7:	74 05                	je     80482ae <_init+0x1e>
 80482a9:	e8 32 00 00 00       	call   80482e0 <__gmon_start__@plt>
 80482ae:	83 c4 08             	add    esp,0x8
 80482b1:	5b                   	pop    ebx
 80482b2:	c3                   	ret

Disassembly of section .plt:

080482c0 <.plt>:
 80482c0:	ff 35 b4 96 04 08    	push   DWORD PTR ds:0x80496b4
 80482c6:	ff 25 b8 96 04 08    	jmp    DWORD PTR ds:0x80496b8
 80482cc:	00 00                	add    BYTE PTR [eax],al
	...

080482d0 <puts@plt>:
 80482d0:	ff 25 bc 96 04 08    	jmp    DWORD PTR ds:0x80496bc
 80482d6:	68 00 00 00 00       	push   0x0
 80482db:	e9 e0 ff ff ff       	jmp    80482c0 <.plt>

080482e0 <__gmon_start__@plt>:
 80482e0:	ff 25 c0 96 04 08    	jmp    DWORD PTR ds:0x80496c0
 80482e6:	68 08 00 00 00       	push   0x8
 80482eb:	e9 d0 ff ff ff       	jmp    80482c0 <.plt>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 c4 96 04 08    	jmp    DWORD PTR ds:0x80496c4
 80482f6:	68 10 00 00 00       	push   0x10
 80482fb:	e9 c0 ff ff ff       	jmp    80482c0 <.plt>

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    ebp,ebp
 8048302:	5e                   	pop    esi
 8048303:	89 e1                	mov    ecx,esp
 8048305:	83 e4 f0             	and    esp,0xfffffff0
 8048308:	50                   	push   eax
 8048309:	54                   	push   esp
 804830a:	52                   	push   edx
 804830b:	68 90 84 04 08       	push   0x8048490
 8048310:	68 30 84 04 08       	push   0x8048430
 8048315:	51                   	push   ecx
 8048316:	56                   	push   esi
 8048317:	68 fb 83 04 08       	push   0x80483fb
 804831c:	e8 cf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048321:	f4                   	hlt
 8048322:	66 90                	xchg   ax,ax
 8048324:	66 90                	xchg   ax,ax
 8048326:	66 90                	xchg   ax,ax
 8048328:	66 90                	xchg   ax,ax
 804832a:	66 90                	xchg   ax,ax
 804832c:	66 90                	xchg   ax,ax
 804832e:	66 90                	xchg   ax,ax

08048330 <__x86.get_pc_thunk.bx>:
 8048330:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048333:	c3                   	ret
 8048334:	66 90                	xchg   ax,ax
 8048336:	66 90                	xchg   ax,ax
 8048338:	66 90                	xchg   ax,ax
 804833a:	66 90                	xchg   ax,ax
 804833c:	66 90                	xchg   ax,ax
 804833e:	66 90                	xchg   ax,ax

08048340 <deregister_tm_clones>:
 8048340:	b8 d3 96 04 08       	mov    eax,0x80496d3
 8048345:	2d d0 96 04 08       	sub    eax,0x80496d0
 804834a:	83 f8 06             	cmp    eax,0x6
 804834d:	76 1a                	jbe    8048369 <deregister_tm_clones+0x29>
 804834f:	b8 00 00 00 00       	mov    eax,0x0
 8048354:	85 c0                	test   eax,eax
 8048356:	74 11                	je     8048369 <deregister_tm_clones+0x29>
 8048358:	55                   	push   ebp
 8048359:	89 e5                	mov    ebp,esp
 804835b:	83 ec 14             	sub    esp,0x14
 804835e:	68 d0 96 04 08       	push   0x80496d0
 8048363:	ff d0                	call   eax
 8048365:	83 c4 10             	add    esp,0x10
 8048368:	c9                   	leave
 8048369:	f3 c3                	repz ret
 804836b:	90                   	nop
 804836c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048370 <register_tm_clones>:
 8048370:	b8 d0 96 04 08       	mov    eax,0x80496d0
 8048375:	2d d0 96 04 08       	sub    eax,0x80496d0
 804837a:	c1 f8 02             	sar    eax,0x2
 804837d:	89 c2                	mov    edx,eax
 804837f:	c1 ea 1f             	shr    edx,0x1f
 8048382:	01 d0                	add    eax,edx
 8048384:	d1 f8                	sar    eax,1
 8048386:	74 1b                	je     80483a3 <register_tm_clones+0x33>
 8048388:	ba 00 00 00 00       	mov    edx,0x0
 804838d:	85 d2                	test   edx,edx
 804838f:	74 12                	je     80483a3 <register_tm_clones+0x33>
 8048391:	55                   	push   ebp
 8048392:	89 e5                	mov    ebp,esp
 8048394:	83 ec 10             	sub    esp,0x10
 8048397:	50                   	push   eax
 8048398:	68 d0 96 04 08       	push   0x80496d0
 804839d:	ff d2                	call   edx
 804839f:	83 c4 10             	add    esp,0x10
 80483a2:	c9                   	leave
 80483a3:	f3 c3                	repz ret
 80483a5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483b0 <__do_global_dtors_aux>:
 80483b0:	80 3d d0 96 04 08 00 	cmp    BYTE PTR ds:0x80496d0,0x0
 80483b7:	75 13                	jne    80483cc <__do_global_dtors_aux+0x1c>
 80483b9:	55                   	push   ebp
 80483ba:	89 e5                	mov    ebp,esp
 80483bc:	83 ec 08             	sub    esp,0x8
 80483bf:	e8 7c ff ff ff       	call   8048340 <deregister_tm_clones>
 80483c4:	c6 05 d0 96 04 08 01 	mov    BYTE PTR ds:0x80496d0,0x1
 80483cb:	c9                   	leave
 80483cc:	f3 c3                	repz ret
 80483ce:	66 90                	xchg   ax,ax

080483d0 <frame_dummy>:
 80483d0:	b8 c0 95 04 08       	mov    eax,0x80495c0
 80483d5:	8b 10                	mov    edx,DWORD PTR [eax]
 80483d7:	85 d2                	test   edx,edx
 80483d9:	75 05                	jne    80483e0 <frame_dummy+0x10>
 80483db:	eb 93                	jmp    8048370 <register_tm_clones>
 80483dd:	8d 76 00             	lea    esi,[esi+0x0]
 80483e0:	ba 00 00 00 00       	mov    edx,0x0
 80483e5:	85 d2                	test   edx,edx
 80483e7:	74 f2                	je     80483db <frame_dummy+0xb>
 80483e9:	55                   	push   ebp
 80483ea:	89 e5                	mov    ebp,esp
 80483ec:	83 ec 14             	sub    esp,0x14
 80483ef:	50                   	push   eax
 80483f0:	ff d2                	call   edx
 80483f2:	83 c4 10             	add    esp,0x10
 80483f5:	c9                   	leave
 80483f6:	e9 75 ff ff ff       	jmp    8048370 <register_tm_clones>

080483fb <main>:
 80483fb:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80483ff:	83 e4 f0             	and    esp,0xfffffff0
 8048402:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048405:	55                   	push   ebp
 8048406:	89 e5                	mov    ebp,esp
 8048408:	51                   	push   ecx
 8048409:	83 ec 04             	sub    esp,0x4
 804840c:	83 ec 0c             	sub    esp,0xc
 804840f:	68 b0 84 04 08       	push   0x80484b0
 8048414:	e8 b7 fe ff ff       	call   80482d0 <puts@plt>
 8048419:	83 c4 10             	add    esp,0x10
 804841c:	b8 00 00 00 00       	mov    eax,0x0
 8048421:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 8048424:	c9                   	leave
 8048425:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048428:	c3                   	ret
 8048429:	66 90                	xchg   ax,ax
 804842b:	66 90                	xchg   ax,ax
 804842d:	66 90                	xchg   ax,ax
 804842f:	90                   	nop

08048430 <__libc_csu_init>:
 8048430:	55                   	push   ebp
 8048431:	57                   	push   edi
 8048432:	56                   	push   esi
 8048433:	53                   	push   ebx
 8048434:	e8 f7 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 8048439:	81 c3 77 12 00 00    	add    ebx,0x1277
 804843f:	83 ec 0c             	sub    esp,0xc
 8048442:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048446:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804844c:	e8 3f fe ff ff       	call   8048290 <_init>
 8048451:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048457:	29 c6                	sub    esi,eax
 8048459:	c1 fe 02             	sar    esi,0x2
 804845c:	85 f6                	test   esi,esi
 804845e:	74 25                	je     8048485 <__libc_csu_init+0x55>
 8048460:	31 ff                	xor    edi,edi
 8048462:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048468:	83 ec 04             	sub    esp,0x4
 804846b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804846f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048473:	55                   	push   ebp
 8048474:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804847b:	83 c7 01             	add    edi,0x1
 804847e:	83 c4 10             	add    esp,0x10
 8048481:	39 f7                	cmp    edi,esi
 8048483:	75 e3                	jne    8048468 <__libc_csu_init+0x38>
 8048485:	83 c4 0c             	add    esp,0xc
 8048488:	5b                   	pop    ebx
 8048489:	5e                   	pop    esi
 804848a:	5f                   	pop    edi
 804848b:	5d                   	pop    ebp
 804848c:	c3                   	ret
 804848d:	8d 76 00             	lea    esi,[esi+0x0]

08048490 <__libc_csu_fini>:
 8048490:	f3 c3                	repz ret

Disassembly of section .fini:

08048494 <_fini>:
 8048494:	53                   	push   ebx
 8048495:	83 ec 08             	sub    esp,0x8
 8048498:	e8 93 fe ff ff       	call   8048330 <__x86.get_pc_thunk.bx>
 804849d:	81 c3 13 12 00 00    	add    ebx,0x1213
 80484a3:	83 c4 08             	add    esp,0x8
 80484a6:	5b                   	pop    ebx
 80484a7:	c3                   	ret

Disassembly of section .rodata:

080484a8 <_fp_hw>:
 80484a8:	03 00                	add    eax,DWORD PTR [eax]
	...

080484ac <_IO_stdin_used>:
 80484ac:	01 00                	add    DWORD PTR [eax],eax
 80484ae:	02 00                	add    al,BYTE PTR [eax]
 80484b0:	68 65 6c 6c 6f       	push   0x6f6c6c65
 80484b5:	20 77 6f             	and    BYTE PTR [edi+0x6f],dh
 80484b8:	72 6c                	jb     8048526 <_IO_stdin_used+0x7a>
 80484ba:	64 21 00             	and    DWORD PTR fs:[eax],eax

Disassembly of section .eh_frame_hdr:

080484c0 <.eh_frame_hdr>:
 80484c0:	01 1b                	add    DWORD PTR [ebx],ebx
 80484c2:	03 3b                	add    edi,DWORD PTR [ebx]
 80484c4:	28 00                	sub    BYTE PTR [eax],al
 80484c6:	00 00                	add    BYTE PTR [eax],al
 80484c8:	04 00                	add    al,0x0
 80484ca:	00 00                	add    BYTE PTR [eax],al
 80484cc:	00 fe                	add    dh,bh
 80484ce:	ff                   	(bad)
 80484cf:	ff 44 00 00          	inc    DWORD PTR [eax+eax*1+0x0]
 80484d3:	00 3b                	add    BYTE PTR [ebx],bh
 80484d5:	ff                   	(bad)
 80484d6:	ff                   	(bad)
 80484d7:	ff 68 00             	jmp    FWORD PTR [eax+0x0]
 80484da:	00 00                	add    BYTE PTR [eax],al
 80484dc:	70 ff                	jo     80484dd <_IO_stdin_used+0x31>
 80484de:	ff                   	(bad)
 80484df:	ff 94 00 00 00 d0 ff 	call   DWORD PTR [eax+eax*1-0x300000]
 80484e6:	ff                   	(bad)
 80484e7:	ff e0                	jmp    eax
 80484e9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

080484ec <__FRAME_END__-0xc8>:
 80484ec:	14 00                	adc    al,0x0
 80484ee:	00 00                	add    BYTE PTR [eax],al
 80484f0:	00 00                	add    BYTE PTR [eax],al
 80484f2:	00 00                	add    BYTE PTR [eax],al
 80484f4:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 80484f7:	00 01                	add    BYTE PTR [ecx],al
 80484f9:	7c 08                	jl     8048503 <_IO_stdin_used+0x57>
 80484fb:	01 1b                	add    DWORD PTR [ebx],ebx
 80484fd:	0c 04                	or     al,0x4
 80484ff:	04 88                	add    al,0x88
 8048501:	01 00                	add    DWORD PTR [eax],eax
 8048503:	00 20                	add    BYTE PTR [eax],ah
 8048505:	00 00                	add    BYTE PTR [eax],al
 8048507:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804850a:	00 00                	add    BYTE PTR [eax],al
 804850c:	b4 fd                	mov    ah,0xfd
 804850e:	ff                   	(bad)
 804850f:	ff 40 00             	inc    DWORD PTR [eax+0x0]
 8048512:	00 00                	add    BYTE PTR [eax],al
 8048514:	00 0e                	add    BYTE PTR [esi],cl
 8048516:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048519:	0c 4a                	or     al,0x4a
 804851b:	0f 0b                	ud2
 804851d:	74 04                	je     8048523 <_IO_stdin_used+0x77>
 804851f:	78 00                	js     8048521 <_IO_stdin_used+0x75>
 8048521:	3f                   	aas
 8048522:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048524:	2a 32                	sub    dh,BYTE PTR [edx]
 8048526:	24 22                	and    al,0x22
 8048528:	28 00                	sub    BYTE PTR [eax],al
 804852a:	00 00                	add    BYTE PTR [eax],al
 804852c:	40                   	inc    eax
 804852d:	00 00                	add    BYTE PTR [eax],al
 804852f:	00 cb                	add    bl,cl
 8048531:	fe                   	(bad)
 8048532:	ff                   	(bad)
 8048533:	ff 2e                	jmp    FWORD PTR [esi]
 8048535:	00 00                	add    BYTE PTR [eax],al
 8048537:	00 00                	add    BYTE PTR [eax],al
 8048539:	44                   	inc    esp
 804853a:	0c 01                	or     al,0x1
 804853c:	00 47 10             	add    BYTE PTR [edi+0x10],al
 804853f:	05 02 75 00 43       	add    eax,0x43007502
 8048544:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 8048548:	06                   	push   es
 8048549:	5b                   	pop    ebx
 804854a:	0c 01                	or     al,0x1
 804854c:	00 41 c5             	add    BYTE PTR [ecx-0x3b],al
 804854f:	43                   	inc    ebx
 8048550:	0c 04                	or     al,0x4
 8048552:	04 00                	add    al,0x0
 8048554:	48                   	dec    eax
 8048555:	00 00                	add    BYTE PTR [eax],al
 8048557:	00 6c 00 00          	add    BYTE PTR [eax+eax*1+0x0],ch
 804855b:	00 d4                	add    ah,dl
 804855d:	fe                   	(bad)
 804855e:	ff                   	(bad)
 804855f:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 8048562:	00 00                	add    BYTE PTR [eax],al
 8048564:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8048567:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 804856d:	87 03                	xchg   DWORD PTR [ebx],eax
 804856f:	41                   	inc    ecx
 8048570:	0e                   	push   cs
 8048571:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 8048577:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 804857e:	24 44                	and    al,0x44
 8048580:	0e                   	push   cs
 8048581:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 8048585:	41                   	inc    ecx
 8048586:	0e                   	push   cs
 8048587:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 804858a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 804858d:	14 41                	adc    al,0x41
 804858f:	c3                   	ret
 8048590:	0e                   	push   cs
 8048591:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 8048594:	0e                   	push   cs
 8048595:	0c 41                	or     al,0x41
 8048597:	c7                   	(bad)
 8048598:	0e                   	push   cs
 8048599:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 804859c:	0e                   	push   cs
 804859d:	04 00                	add    al,0x0
 804859f:	00 10                	add    BYTE PTR [eax],dl
 80485a1:	00 00                	add    BYTE PTR [eax],al
 80485a3:	00 b8 00 00 00 e8    	add    BYTE PTR [eax-0x18000000],bh
 80485a9:	fe                   	(bad)
 80485aa:	ff                   	(bad)
 80485ab:	ff 02                	inc    DWORD PTR [edx]
 80485ad:	00 00                	add    BYTE PTR [eax],al
 80485af:	00 00                	add    BYTE PTR [eax],al
 80485b1:	00 00                	add    BYTE PTR [eax],al
	...

080485b4 <__FRAME_END__>:
 80485b4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

080495b8 <__frame_dummy_init_array_entry>:
 80495b8:	d0                   	.byte 0xd0
 80495b9:	83                   	.byte 0x83
 80495ba:	04 08                	add    al,0x8

Disassembly of section .fini_array:

080495bc <__do_global_dtors_aux_fini_array_entry>:
 80495bc:	b0 83                	mov    al,0x83
 80495be:	04 08                	add    al,0x8

Disassembly of section .jcr:

080495c0 <__JCR_END__>:
 80495c0:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

080495c4 <_DYNAMIC>:
 80495c4:	01 00                	add    DWORD PTR [eax],eax
 80495c6:	00 00                	add    BYTE PTR [eax],al
 80495c8:	01 00                	add    DWORD PTR [eax],eax
 80495ca:	00 00                	add    BYTE PTR [eax],al
 80495cc:	0c 00                	or     al,0x0
 80495ce:	00 00                	add    BYTE PTR [eax],al
 80495d0:	90                   	nop
 80495d1:	82 04 08 0d          	add    BYTE PTR [eax+ecx*1],0xd
 80495d5:	00 00                	add    BYTE PTR [eax],al
 80495d7:	00 94 84 04 08 19 00 	add    BYTE PTR [esp+eax*4+0x190804],dl
 80495de:	00 00                	add    BYTE PTR [eax],al
 80495e0:	b8 95 04 08 1b       	mov    eax,0x1b080495
 80495e5:	00 00                	add    BYTE PTR [eax],al
 80495e7:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 80495ea:	00 00                	add    BYTE PTR [eax],al
 80495ec:	1a 00                	sbb    al,BYTE PTR [eax]
 80495ee:	00 00                	add    BYTE PTR [eax],al
 80495f0:	bc 95 04 08 1c       	mov    esp,0x1c080495
 80495f5:	00 00                	add    BYTE PTR [eax],al
 80495f7:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 80495fa:	00 00                	add    BYTE PTR [eax],al
 80495fc:	f5                   	cmc
 80495fd:	fe                   	(bad)
 80495fe:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049601:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049608:	fc                   	cld
 8049609:	81 04 08 06 00 00 00 	add    DWORD PTR [eax+ecx*1],0x6
 8049610:	ac                   	lods   al,BYTE PTR ds:[esi]
 8049611:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049618:	4a                   	dec    edx
 8049619:	00 00                	add    BYTE PTR [eax],al
 804961b:	00 0b                	add    BYTE PTR [ebx],cl
 804961d:	00 00                	add    BYTE PTR [eax],al
 804961f:	00 10                	add    BYTE PTR [eax],dl
 8049621:	00 00                	add    BYTE PTR [eax],al
 8049623:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049629:	00 00                	add    BYTE PTR [eax],al
 804962b:	00 03                	add    BYTE PTR [ebx],al
 804962d:	00 00                	add    BYTE PTR [eax],al
 804962f:	00 b0 96 04 08 02    	add    BYTE PTR [eax+0x2080496],dh
 8049635:	00 00                	add    BYTE PTR [eax],al
 8049637:	00 18                	add    BYTE PTR [eax],bl
 8049639:	00 00                	add    BYTE PTR [eax],al
 804963b:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 804963e:	00 00                	add    BYTE PTR [eax],al
 8049640:	11 00                	adc    DWORD PTR [eax],eax
 8049642:	00 00                	add    BYTE PTR [eax],al
 8049644:	17                   	pop    ss
 8049645:	00 00                	add    BYTE PTR [eax],al
 8049647:	00 78 82             	add    BYTE PTR [eax-0x7e],bh
 804964a:	04 08                	add    al,0x8
 804964c:	11 00                	adc    DWORD PTR [eax],eax
 804964e:	00 00                	add    BYTE PTR [eax],al
 8049650:	70 82                	jo     80495d4 <_DYNAMIC+0x10>
 8049652:	04 08                	add    al,0x8
 8049654:	12 00                	adc    al,BYTE PTR [eax]
 8049656:	00 00                	add    BYTE PTR [eax],al
 8049658:	08 00                	or     BYTE PTR [eax],al
 804965a:	00 00                	add    BYTE PTR [eax],al
 804965c:	13 00                	adc    eax,DWORD PTR [eax]
 804965e:	00 00                	add    BYTE PTR [eax],al
 8049660:	08 00                	or     BYTE PTR [eax],al
 8049662:	00 00                	add    BYTE PTR [eax],al
 8049664:	fe                   	(bad)
 8049665:	ff                   	(bad)
 8049666:	ff 6f 50             	jmp    FWORD PTR [edi+0x50]
 8049669:	82 04 08 ff          	add    BYTE PTR [eax+ecx*1],0xff
 804966d:	ff                   	(bad)
 804966e:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049671:	00 00                	add    BYTE PTR [eax],al
 8049673:	00 f0                	add    al,dh
 8049675:	ff                   	(bad)
 8049676:	ff 6f 46             	jmp    FWORD PTR [edi+0x46]
 8049679:	82 04 08 00          	add    BYTE PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

080496ac <.got>:
 80496ac:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

080496b0 <_GLOBAL_OFFSET_TABLE_>:
 80496b0:	c4 95 04 08 00 00    	les    edx,FWORD PTR [ebp+0x804]
 80496b6:	00 00                	add    BYTE PTR [eax],al
 80496b8:	00 00                	add    BYTE PTR [eax],al
 80496ba:	00 00                	add    BYTE PTR [eax],al
 80496bc:	d6                   	(bad)
 80496bd:	82 04 08 e6          	add    BYTE PTR [eax+ecx*1],0xe6
 80496c1:	82 04 08 f6          	add    BYTE PTR [eax+ecx*1],0xf6
 80496c5:	82                   	.byte 0x82
 80496c6:	04 08                	add    al,0x8

Disassembly of section .data:

080496c8 <__data_start>:
 80496c8:	00 00                	add    BYTE PTR [eax],al
	...

080496cc <__dso_handle>:
 80496cc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	35 2e 33 2e 30       	xor    eax,0x302e332e
	...
